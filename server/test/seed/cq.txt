sp_idp_pa_users_day_cq            CREATE CONTINUOUS QUERY sp_idp_pa_users_day_cq ON eb_logs_test RESAMPLE EVERY 1h FOR 2d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id, count(user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_pa_users_day FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY sp_entity_id, idp_entity_id, year, month, quarter, time(1d) END
idp_pa_users_day_cq               CREATE CONTINUOUS QUERY idp_pa_users_day_cq ON eb_logs_test RESAMPLE EVERY 1h FOR 2d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id, count(user_id) AS count_user_id INTO eb_logs_test.autogen.idp_pa_users_day FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY idp_entity_id, year, month, quarter, time(1d) END
sp_pa_users_day_cq                CREATE CONTINUOUS QUERY sp_pa_users_day_cq ON eb_logs_test RESAMPLE EVERY 1h FOR 2d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id, count(user_id) AS count_user_id INTO eb_logs_test.autogen.sp_pa_users_day FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY sp_entity_id, year, month, quarter, time(1d) END
total_pa_users_day_cq             CREATE CONTINUOUS QUERY total_pa_users_day_cq ON eb_logs_test RESAMPLE EVERY 1h FOR 2d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id, count(user_id) AS count_user_id INTO eb_logs_test.autogen.total_pa_users_day FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY year, month, quarter, time(1d) END
sp_idp_ta_users_day_cq            CREATE CONTINUOUS QUERY sp_idp_ta_users_day_cq ON eb_logs_test RESAMPLE EVERY 1h FOR 2d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id, count(user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_ta_users_day FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY sp_entity_id, idp_entity_id, year, month, quarter, time(1d) END
idp_ta_users_day_cq               CREATE CONTINUOUS QUERY idp_ta_users_day_cq ON eb_logs_test RESAMPLE EVERY 1h FOR 2d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id, count(user_id) AS count_user_id INTO eb_logs_test.autogen.idp_ta_users_day FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY idp_entity_id, year, month, quarter, time(1d) END
sp_ta_users_day_cq                CREATE CONTINUOUS QUERY sp_ta_users_day_cq ON eb_logs_test RESAMPLE EVERY 1h FOR 2d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id, count(user_id) AS count_user_id INTO eb_logs_test.autogen.sp_ta_users_day FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY sp_entity_id, year, month, quarter, time(1d) END
total_ta_users_day_cq             CREATE CONTINUOUS QUERY total_ta_users_day_cq ON eb_logs_test RESAMPLE EVERY 1h FOR 2d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id, count(user_id) AS count_user_id INTO eb_logs_test.autogen.total_ta_users_day FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY year, month, quarter, time(1d) END
sp_idp_users_day_cq               CREATE CONTINUOUS QUERY sp_idp_users_day_cq ON eb_logs_test RESAMPLE EVERY 1h FOR 2d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id, count(user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_users_day FROM eb_logs_test.autogen.eb_logins_tst GROUP BY sp_entity_id, idp_entity_id, year, month, quarter, time(1d) END
idp_users_day_cq                  CREATE CONTINUOUS QUERY idp_users_day_cq ON eb_logs_test RESAMPLE EVERY 1h FOR 2d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id, count(user_id) AS count_user_id INTO eb_logs_test.autogen.idp_users_day FROM eb_logs_test.autogen.eb_logins_tst GROUP BY idp_entity_id, year, month, quarter, time(1d) END
sp_users_day_cq                   CREATE CONTINUOUS QUERY sp_users_day_cq ON eb_logs_test RESAMPLE EVERY 1h FOR 2d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id, count(user_id) AS count_user_id INTO eb_logs_test.autogen.sp_users_day FROM eb_logs_test.autogen.eb_logins_tst GROUP BY sp_entity_id, year, month, quarter, time(1d) END
total_users_day_cq                CREATE CONTINUOUS QUERY total_users_day_cq ON eb_logs_test RESAMPLE EVERY 1h FOR 2d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id, count(user_id) AS count_user_id INTO eb_logs_test.autogen.total_users_day FROM eb_logs_test.autogen.eb_logins_tst GROUP BY year, month, quarter, time(1d) END
sp_idp_pa_users_month_unique_cq   CREATE CONTINUOUS QUERY sp_idp_pa_users_month_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_idp_pa_users_month_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY sp_entity_id, idp_entity_id, time(12600w), year, month END
idp_pa_users_month_unique_cq      CREATE CONTINUOUS QUERY idp_pa_users_month_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.idp_pa_users_month_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY idp_entity_id, time(12600w), year, month END
sp_pa_users_month_unique_cq       CREATE CONTINUOUS QUERY sp_pa_users_month_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_pa_users_month_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY sp_entity_id, time(12600w), year, month END
total_pa_users_month_unique_cq    CREATE CONTINUOUS QUERY total_pa_users_month_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.total_pa_users_month_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY time(12600w), year, month END
sp_idp_ta_users_month_unique_cq   CREATE CONTINUOUS QUERY sp_idp_ta_users_month_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_idp_ta_users_month_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY sp_entity_id, idp_entity_id, time(12600w), year, month END
idp_ta_users_month_unique_cq      CREATE CONTINUOUS QUERY idp_ta_users_month_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.idp_ta_users_month_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY idp_entity_id, time(12600w), year, month END
sp_ta_users_month_unique_cq       CREATE CONTINUOUS QUERY sp_ta_users_month_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_ta_users_month_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY sp_entity_id, time(12600w), year, month END
total_ta_users_month_unique_cq    CREATE CONTINUOUS QUERY total_ta_users_month_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.total_ta_users_month_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY time(12600w), year, month END
sp_idp_users_month_unique_cq      CREATE CONTINUOUS QUERY sp_idp_users_month_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_idp_users_month_unique FROM eb_logs_test.autogen.eb_logins_tst GROUP BY sp_entity_id, idp_entity_id, time(12600w), year, month END
idp_users_month_unique_cq         CREATE CONTINUOUS QUERY idp_users_month_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.idp_users_month_unique FROM eb_logs_test.autogen.eb_logins_tst GROUP BY idp_entity_id, time(12600w), year, month END
sp_users_month_unique_cq          CREATE CONTINUOUS QUERY sp_users_month_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_users_month_unique FROM eb_logs_test.autogen.eb_logins_tst GROUP BY sp_entity_id, time(12600w), year, month END
total_users_month_unique_cq       CREATE CONTINUOUS QUERY total_users_month_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.total_users_month_unique FROM eb_logs_test.autogen.eb_logins_tst GROUP BY time(12600w), year, month END
sp_idp_pa_users_quarter_unique_cq CREATE CONTINUOUS QUERY sp_idp_pa_users_quarter_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_idp_pa_users_quarter_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY sp_entity_id, idp_entity_id, time(12600w), year, quarter END
idp_pa_users_quarter_unique_cq    CREATE CONTINUOUS QUERY idp_pa_users_quarter_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.idp_pa_users_quarter_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY idp_entity_id, time(12600w), year, quarter END
sp_pa_users_quarter_unique_cq     CREATE CONTINUOUS QUERY sp_pa_users_quarter_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_pa_users_quarter_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY sp_entity_id, time(12600w), year, quarter END
total_pa_users_quarter_unique_cq  CREATE CONTINUOUS QUERY total_pa_users_quarter_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.total_pa_users_quarter_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY time(12600w), year, quarter END
sp_idp_ta_users_quarter_unique_cq CREATE CONTINUOUS QUERY sp_idp_ta_users_quarter_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_idp_ta_users_quarter_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY sp_entity_id, idp_entity_id, time(12600w), year, quarter END
idp_ta_users_quarter_unique_cq    CREATE CONTINUOUS QUERY idp_ta_users_quarter_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.idp_ta_users_quarter_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY idp_entity_id, time(12600w), year, quarter END
sp_ta_users_quarter_unique_cq     CREATE CONTINUOUS QUERY sp_ta_users_quarter_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_ta_users_quarter_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY sp_entity_id, time(12600w), year, quarter END
total_ta_users_quarter_unique_cq  CREATE CONTINUOUS QUERY total_ta_users_quarter_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.total_ta_users_quarter_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY time(12600w), year, quarter END
sp_idp_users_quarter_unique_cq    CREATE CONTINUOUS QUERY sp_idp_users_quarter_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_idp_users_quarter_unique FROM eb_logs_test.autogen.eb_logins_tst GROUP BY sp_entity_id, idp_entity_id, time(12600w), year, quarter END
idp_users_quarter_unique_cq       CREATE CONTINUOUS QUERY idp_users_quarter_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.idp_users_quarter_unique FROM eb_logs_test.autogen.eb_logins_tst GROUP BY idp_entity_id, time(12600w), year, quarter END
sp_users_quarter_unique_cq        CREATE CONTINUOUS QUERY sp_users_quarter_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_users_quarter_unique FROM eb_logs_test.autogen.eb_logins_tst GROUP BY sp_entity_id, time(12600w), year, quarter END
total_users_quarter_unique_cq     CREATE CONTINUOUS QUERY total_users_quarter_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.total_users_quarter_unique FROM eb_logs_test.autogen.eb_logins_tst GROUP BY time(12600w), year, quarter END
sp_idp_pa_users_year_unique_cq    CREATE CONTINUOUS QUERY sp_idp_pa_users_year_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_idp_pa_users_year_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY sp_entity_id, idp_entity_id, time(12600w), year END
idp_pa_users_year_unique_cq       CREATE CONTINUOUS QUERY idp_pa_users_year_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.idp_pa_users_year_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY idp_entity_id, time(12600w), year END
sp_pa_users_year_unique_cq        CREATE CONTINUOUS QUERY sp_pa_users_year_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_pa_users_year_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY sp_entity_id, time(12600w), year END
total_pa_users_year_unique_cq     CREATE CONTINUOUS QUERY total_pa_users_year_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.total_pa_users_year_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' GROUP BY time(12600w), year END
sp_idp_ta_users_year_unique_cq    CREATE CONTINUOUS QUERY sp_idp_ta_users_year_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_idp_ta_users_year_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY sp_entity_id, idp_entity_id, time(12600w), year END
idp_ta_users_year_unique_cq       CREATE CONTINUOUS QUERY idp_ta_users_year_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.idp_ta_users_year_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY idp_entity_id, time(12600w), year END
sp_ta_users_year_unique_cq        CREATE CONTINUOUS QUERY sp_ta_users_year_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_ta_users_year_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY sp_entity_id, time(12600w), year END
total_ta_users_year_unique_cq     CREATE CONTINUOUS QUERY total_ta_users_year_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.total_ta_users_year_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' GROUP BY time(12600w), year END
sp_idp_users_year_unique_cq       CREATE CONTINUOUS QUERY sp_idp_users_year_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_idp_users_year_unique FROM eb_logs_test.autogen.eb_logins_tst GROUP BY sp_entity_id, idp_entity_id, time(12600w), year END
idp_users_year_unique_cq          CREATE CONTINUOUS QUERY idp_users_year_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.idp_users_year_unique FROM eb_logs_test.autogen.eb_logins_tst GROUP BY idp_entity_id, time(12600w), year END
sp_users_year_unique_cq           CREATE CONTINUOUS QUERY sp_users_year_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_users_year_unique FROM eb_logs_test.autogen.eb_logins_tst GROUP BY sp_entity_id, time(12600w), year END
total_users_year_unique_cq        CREATE CONTINUOUS QUERY total_users_year_unique_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.total_users_year_unique FROM eb_logs_test.autogen.eb_logins_tst GROUP BY time(12600w), year END
sp_idp_pa_users_week_cq           CREATE CONTINUOUS QUERY sp_idp_pa_users_week_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_pa_users_week FROM eb_logs_test.autogen.sp_idp_pa_users_day GROUP BY sp_entity_id, idp_entity_id, year, month, quarter, time(1w, 4d) END
idp_pa_users_week_cq              CREATE CONTINUOUS QUERY idp_pa_users_week_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.idp_pa_users_week FROM eb_logs_test.autogen.idp_pa_users_day GROUP BY idp_entity_id, year, month, quarter, time(1w, 4d) END
sp_pa_users_week_cq               CREATE CONTINUOUS QUERY sp_pa_users_week_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_pa_users_week FROM eb_logs_test.autogen.sp_pa_users_day GROUP BY sp_entity_id, year, month, quarter, time(1w, 4d) END
total_pa_users_week_cq            CREATE CONTINUOUS QUERY total_pa_users_week_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.total_pa_users_week FROM eb_logs_test.autogen.total_pa_users_day GROUP BY year, month, quarter, time(1w, 4d) END
sp_idp_ta_users_week_cq           CREATE CONTINUOUS QUERY sp_idp_ta_users_week_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_ta_users_week FROM eb_logs_test.autogen.sp_idp_ta_users_day GROUP BY sp_entity_id, idp_entity_id, year, month, quarter, time(1w, 4d) END
idp_ta_users_week_cq              CREATE CONTINUOUS QUERY idp_ta_users_week_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.idp_ta_users_week FROM eb_logs_test.autogen.idp_ta_users_day GROUP BY idp_entity_id, year, month, quarter, time(1w, 4d) END
sp_ta_users_week_cq               CREATE CONTINUOUS QUERY sp_ta_users_week_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_ta_users_week FROM eb_logs_test.autogen.sp_ta_users_day GROUP BY sp_entity_id, year, month, quarter, time(1w, 4d) END
total_ta_users_week_cq            CREATE CONTINUOUS QUERY total_ta_users_week_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.total_ta_users_week FROM eb_logs_test.autogen.total_ta_users_day GROUP BY year, month, quarter, time(1w, 4d) END
sp_idp_users_week_cq              CREATE CONTINUOUS QUERY sp_idp_users_week_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_users_week FROM eb_logs_test.autogen.sp_idp_users_day GROUP BY sp_entity_id, idp_entity_id, year, month, quarter, time(1w, 4d) END
idp_users_week_cq                 CREATE CONTINUOUS QUERY idp_users_week_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.idp_users_week FROM eb_logs_test.autogen.idp_users_day GROUP BY idp_entity_id, year, month, quarter, time(1w, 4d) END
sp_users_week_cq                  CREATE CONTINUOUS QUERY sp_users_week_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_users_week FROM eb_logs_test.autogen.sp_users_day GROUP BY sp_entity_id, year, month, quarter, time(1w, 4d) END
total_users_week_cq               CREATE CONTINUOUS QUERY total_users_week_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.total_users_week FROM eb_logs_test.autogen.total_users_day GROUP BY year, month, quarter, time(1w, 4d) END
sp_idp_pa_users_month_cq          CREATE CONTINUOUS QUERY sp_idp_pa_users_month_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_pa_users_month FROM eb_logs_test.autogen.sp_idp_pa_users_week GROUP BY sp_entity_id, idp_entity_id, time(12600w), year, month END
idp_pa_users_month_cq             CREATE CONTINUOUS QUERY idp_pa_users_month_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.idp_pa_users_month FROM eb_logs_test.autogen.idp_pa_users_week GROUP BY idp_entity_id, time(12600w), year, month END
sp_pa_users_month_cq              CREATE CONTINUOUS QUERY sp_pa_users_month_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_pa_users_month FROM eb_logs_test.autogen.sp_pa_users_week GROUP BY sp_entity_id, time(12600w), year, month END
total_pa_users_month_cq           CREATE CONTINUOUS QUERY total_pa_users_month_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.total_pa_users_month FROM eb_logs_test.autogen.total_pa_users_week GROUP BY time(12600w), year, month END
sp_idp_ta_users_month_cq          CREATE CONTINUOUS QUERY sp_idp_ta_users_month_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_ta_users_month FROM eb_logs_test.autogen.sp_idp_ta_users_week GROUP BY sp_entity_id, idp_entity_id, time(12600w), year, month END
idp_ta_users_month_cq             CREATE CONTINUOUS QUERY idp_ta_users_month_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.idp_ta_users_month FROM eb_logs_test.autogen.idp_ta_users_week GROUP BY idp_entity_id, time(12600w), year, month END
sp_ta_users_month_cq              CREATE CONTINUOUS QUERY sp_ta_users_month_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_ta_users_month FROM eb_logs_test.autogen.sp_ta_users_week GROUP BY sp_entity_id, time(12600w), year, month END
total_ta_users_month_cq           CREATE CONTINUOUS QUERY total_ta_users_month_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.total_ta_users_month FROM eb_logs_test.autogen.total_ta_users_week GROUP BY time(12600w), year, month END
sp_idp_users_month_cq             CREATE CONTINUOUS QUERY sp_idp_users_month_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_users_month FROM eb_logs_test.autogen.sp_idp_users_week GROUP BY sp_entity_id, idp_entity_id, time(12600w), year, month END
idp_users_month_cq                CREATE CONTINUOUS QUERY idp_users_month_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.idp_users_month FROM eb_logs_test.autogen.idp_users_week GROUP BY idp_entity_id, time(12600w), year, month END
sp_users_month_cq                 CREATE CONTINUOUS QUERY sp_users_month_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_users_month FROM eb_logs_test.autogen.sp_users_week GROUP BY sp_entity_id, time(12600w), year, month END
total_users_month_cq              CREATE CONTINUOUS QUERY total_users_month_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.total_users_month FROM eb_logs_test.autogen.total_users_week GROUP BY time(12600w), year, month END
sp_idp_pa_users_quarter_cq        CREATE CONTINUOUS QUERY sp_idp_pa_users_quarter_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_pa_users_quarter FROM eb_logs_test.autogen.sp_idp_pa_users_week GROUP BY sp_entity_id, idp_entity_id, time(12600w), year, quarter END
idp_pa_users_quarter_cq           CREATE CONTINUOUS QUERY idp_pa_users_quarter_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.idp_pa_users_quarter FROM eb_logs_test.autogen.idp_pa_users_week GROUP BY idp_entity_id, time(12600w), year, quarter END
sp_pa_users_quarter_cq            CREATE CONTINUOUS QUERY sp_pa_users_quarter_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_pa_users_quarter FROM eb_logs_test.autogen.sp_pa_users_week GROUP BY sp_entity_id, time(12600w), year, quarter END
total_pa_users_quarter_cq         CREATE CONTINUOUS QUERY total_pa_users_quarter_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.total_pa_users_quarter FROM eb_logs_test.autogen.total_pa_users_week GROUP BY time(12600w), year, quarter END
sp_idp_ta_users_quarter_cq        CREATE CONTINUOUS QUERY sp_idp_ta_users_quarter_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_ta_users_quarter FROM eb_logs_test.autogen.sp_idp_ta_users_week GROUP BY sp_entity_id, idp_entity_id, time(12600w), year, quarter END
idp_ta_users_quarter_cq           CREATE CONTINUOUS QUERY idp_ta_users_quarter_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.idp_ta_users_quarter FROM eb_logs_test.autogen.idp_ta_users_week GROUP BY idp_entity_id, time(12600w), year, quarter END
sp_ta_users_quarter_cq            CREATE CONTINUOUS QUERY sp_ta_users_quarter_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_ta_users_quarter FROM eb_logs_test.autogen.sp_ta_users_week GROUP BY sp_entity_id, time(12600w), year, quarter END
total_ta_users_quarter_cq         CREATE CONTINUOUS QUERY total_ta_users_quarter_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.total_ta_users_quarter FROM eb_logs_test.autogen.total_ta_users_week GROUP BY time(12600w), year, quarter END
sp_idp_users_quarter_cq           CREATE CONTINUOUS QUERY sp_idp_users_quarter_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_users_quarter FROM eb_logs_test.autogen.sp_idp_users_week GROUP BY sp_entity_id, idp_entity_id, time(12600w), year, quarter END
idp_users_quarter_cq              CREATE CONTINUOUS QUERY idp_users_quarter_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.idp_users_quarter FROM eb_logs_test.autogen.idp_users_week GROUP BY idp_entity_id, time(12600w), year, quarter END
sp_users_quarter_cq               CREATE CONTINUOUS QUERY sp_users_quarter_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_users_quarter FROM eb_logs_test.autogen.sp_users_week GROUP BY sp_entity_id, time(12600w), year, quarter END
total_users_quarter_cq            CREATE CONTINUOUS QUERY total_users_quarter_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.total_users_quarter FROM eb_logs_test.autogen.total_users_week GROUP BY time(12600w), year, quarter END
sp_idp_pa_users_year_cq           CREATE CONTINUOUS QUERY sp_idp_pa_users_year_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_pa_users_year FROM eb_logs_test.autogen.sp_idp_pa_users_week GROUP BY sp_entity_id, idp_entity_id, time(12600w), year END
idp_pa_users_year_cq              CREATE CONTINUOUS QUERY idp_pa_users_year_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.idp_pa_users_year FROM eb_logs_test.autogen.idp_pa_users_week GROUP BY idp_entity_id, time(12600w), year END
sp_pa_users_year_cq               CREATE CONTINUOUS QUERY sp_pa_users_year_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_pa_users_year FROM eb_logs_test.autogen.sp_pa_users_week GROUP BY sp_entity_id, time(12600w), year END
total_pa_users_year_cq            CREATE CONTINUOUS QUERY total_pa_users_year_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.total_pa_users_year FROM eb_logs_test.autogen.total_pa_users_week GROUP BY time(12600w), year END
sp_idp_ta_users_year_cq           CREATE CONTINUOUS QUERY sp_idp_ta_users_year_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_ta_users_year FROM eb_logs_test.autogen.sp_idp_ta_users_week GROUP BY sp_entity_id, idp_entity_id, time(12600w), year END
idp_ta_users_year_cq              CREATE CONTINUOUS QUERY idp_ta_users_year_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.idp_ta_users_year FROM eb_logs_test.autogen.idp_ta_users_week GROUP BY idp_entity_id, time(12600w), year END
sp_ta_users_year_cq               CREATE CONTINUOUS QUERY sp_ta_users_year_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_ta_users_year FROM eb_logs_test.autogen.sp_ta_users_week GROUP BY sp_entity_id, time(12600w), year END
total_ta_users_year_cq            CREATE CONTINUOUS QUERY total_ta_users_year_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.total_ta_users_year FROM eb_logs_test.autogen.total_ta_users_week GROUP BY time(12600w), year END
sp_idp_users_year_cq              CREATE CONTINUOUS QUERY sp_idp_users_year_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_idp_users_year FROM eb_logs_test.autogen.sp_idp_users_week GROUP BY sp_entity_id, idp_entity_id, time(12600w), year END
idp_users_year_cq                 CREATE CONTINUOUS QUERY idp_users_year_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.idp_users_year FROM eb_logs_test.autogen.idp_users_week GROUP BY idp_entity_id, time(12600w), year END
sp_users_year_cq                  CREATE CONTINUOUS QUERY sp_users_year_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.sp_users_year FROM eb_logs_test.autogen.sp_users_week GROUP BY sp_entity_id, time(12600w), year END
total_users_year_cq               CREATE CONTINUOUS QUERY total_users_year_cq ON eb_logs_test RESAMPLE EVERY 1d BEGIN SELECT sum(count_user_id) AS count_user_id INTO eb_logs_test.autogen.total_users_year FROM eb_logs_test.autogen.total_users_week GROUP BY time(12600w), year END
sp_idp_pa_users_week_unique_cq    CREATE CONTINUOUS QUERY sp_idp_pa_users_week_unique_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_idp_pa_users_week_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' AND time >= '2018-01-01 00:00:00' GROUP BY sp_entity_id, idp_entity_id, time(1w, 4d) END
idp_pa_users_week_unique_cq       CREATE CONTINUOUS QUERY idp_pa_users_week_unique_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.idp_pa_users_week_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' AND time >= '2018-01-01 00:00:00' GROUP BY idp_entity_id, time(1w, 4d) END
sp_pa_users_week_unique_cq        CREATE CONTINUOUS QUERY sp_pa_users_week_unique_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_pa_users_week_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' AND time >= '2018-01-01 00:00:00' GROUP BY sp_entity_id, time(1w, 4d) END
total_pa_users_week_unique_cq     CREATE CONTINUOUS QUERY total_pa_users_week_unique_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.total_pa_users_week_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'prodaccepted' AND time >= '2018-01-01 00:00:00' GROUP BY time(1w, 4d) END
sp_idp_ta_users_week_unique_cq    CREATE CONTINUOUS QUERY sp_idp_ta_users_week_unique_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_idp_ta_users_week_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' AND time >= '2018-01-01 00:00:00' GROUP BY sp_entity_id, idp_entity_id, time(1w, 4d) END
idp_ta_users_week_unique_cq       CREATE CONTINUOUS QUERY idp_ta_users_week_unique_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.idp_ta_users_week_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' AND time >= '2018-01-01 00:00:00' GROUP BY idp_entity_id, time(1w, 4d) END
sp_ta_users_week_unique_cq        CREATE CONTINUOUS QUERY sp_ta_users_week_unique_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_ta_users_week_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' AND time >= '2018-01-01 00:00:00' GROUP BY sp_entity_id, time(1w, 4d) END
total_ta_users_week_unique_cq     CREATE CONTINUOUS QUERY total_ta_users_week_unique_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.total_ta_users_week_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE state = 'testaccepted' AND time >= '2018-01-01 00:00:00' GROUP BY time(1w, 4d) END
sp_idp_users_week_unique_cq       CREATE CONTINUOUS QUERY sp_idp_users_week_unique_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_idp_users_week_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE time >= '2018-01-01 00:00:00' GROUP BY sp_entity_id, idp_entity_id, time(1w, 4d) END
idp_users_week_unique_cq          CREATE CONTINUOUS QUERY idp_users_week_unique_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.idp_users_week_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE time >= '2018-01-01 00:00:00' GROUP BY idp_entity_id, time(1w, 4d) END
sp_users_week_unique_cq           CREATE CONTINUOUS QUERY sp_users_week_unique_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.sp_users_week_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE time >= '2018-01-01 00:00:00' GROUP BY sp_entity_id, time(1w, 4d) END
total_users_week_unique_cq        CREATE CONTINUOUS QUERY total_users_week_unique_cq ON eb_logs_test RESAMPLE EVERY 6h FOR 2w BEGIN SELECT count(distinct(user_id)) AS distinct_count_user_id INTO eb_logs_test.autogen.total_users_week_unique FROM eb_logs_test.autogen.eb_logins_tst WHERE time >= '2018-01-01 00:00:00' GROUP BY time(1w, 4d) END